#include <stdio.h>
#include <stdlib.h>

typedef char ElementType;
typedef struct TNode *Position;
typedef Position BinTree;
struct TNode{
    ElementType Data;
    BinTree Left;
    BinTree Right;
};

BinTree CreatBinTree();
void PreorderTraversal( BinTree BT )
{
    if(BT==NULL)
        return;
    printf(" %c",BT->Data);
    PreorderTraversal(BT->Left);
    PreorderTraversal(BT->Right);
}
void InorderTraversal( BinTree BT )
{
    if(BT==NULL)
        return;
    InorderTraversal(BT->Left);
    printf(" %c",BT->Data);
    InorderTraversal(BT->Right);
}
void PostorderTraversal( BinTree BT )
{
    if(BT==NULL)
        return;
    PostorderTraversal(BT->Left);
    PostorderTraversal(BT->Right);
    printf(" %c",BT->Data);
}
void LevelorderTraversal( BinTree BT )
{
    if(BT==NULL)
        return;
    BinTree queue[10000];
    int front=rear=0;
    queue[rear++]=BT;
    while(front<rear)
    {
        BinTree current=queue[front++]
        printf(" %c",current->Data);
        if(current->Left!=NULL)
            queue[rear++]=current->Left;
        if(current->Right!=NULL)
            queue[rear++]=current->Right;
    }
}

int GetHeight(BinTree BT)
{
    int h1,h2;
    if(BT)
    {
        h1=GetHeight(BT->Left);
        h2=GetHeight(BT->Right);
        return h1>h2?h1+1:h2+1;
    }
    else
        return 0;
}
int main()
{
    return 0;
}
